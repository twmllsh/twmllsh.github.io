{"version":3,"sources":["Filter.js","StockList.js","StockModal.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","_ref","reserveRateThreshold","operatingProfitThreshold","breakthrough","handleReserveRateChange","handleOperatingProfitChange","handleBreakthroughChange","React","createElement","type","min","max","value","onChange","checked","StockList","stocks","openModal","Container","Row","map","stock","Col","key","code","sm","md","lg","xl","Card","onClick","bg","text","style","cursor","marginBottom","Body","Title","name","Text","reserveRate","operatingProfit","StockModal","isOpen","closeModal","Modal","onRequestClose","Fragment","Button","className","setAppElement","stockData","App","setReserveRateThreshold","useState","setOperatingProfitThreshold","setBreakthrough","selectedStock","setSelectedStock","modalIsOpen","setModalIsOpen","filteredStocks","filter","e","Number","target","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c066685d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({\n  reserveRateThreshold,\n  operatingProfitThreshold,\n  breakthrough,\n  handleReserveRateChange,\n  handleOperatingProfitChange,\n  handleBreakthroughChange,\n}) => {\n  return (\n    <div>\n      <label>\n        유보율 기준:\n        <input\n          type=\"range\"\n          min=\"-100\"\n          max=\"100\"\n          value={reserveRateThreshold}\n          onChange={handleReserveRateChange}\n        />\n        {reserveRateThreshold} 이상\n      </label>\n      <label>\n        영업이익 기준:\n        <input\n          type=\"range\"\n          min=\"-100\"\n          max=\"100\"\n          value={operatingProfitThreshold}\n          onChange={handleOperatingProfitChange}\n        />\n        {operatingProfitThreshold} 이상\n      </label>\n      <label>\n        돌파 여부:\n        <input\n          type=\"checkbox\"\n          checked={breakthrough}\n          onChange={handleBreakthroughChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { Card, Container, Row, Col } from 'react-bootstrap';\n\n// StockList 컴포넌트는 주식 목록을 카드 형태로 렌더링합니다.\n// stocks: 주식 데이터 배열\n// openModal: 모달을 여는 함수\nconst StockList = ({ stocks, openModal }) => {\n  return (\n    <Container>\n      <Row>\n        {/* stocks 배열을 순회하여 각 주식을 카드로 렌더링 */}\n        {stocks.map((stock) => (\n          <Col key={stock.code} sm={6} md={4} lg={4} xl={3}>\n            {/* 각 카드는 클릭 시 openModal 함수를 호출하여 모달을 엽니다 */}\n            <Card\n              onClick={() => openModal(stock)}\n              bg=\"info\"\n              text=\"black\"\n              style={{ cursor: 'pointer', marginBottom: '20px' }}\n            >\n              <Card.Body>\n                {/* 주식 이름을 카드 제목으로 표시 */}\n                <Card.Title>\n                  {stock.name} ({stock.code})\n                </Card.Title>\n                <Card.Text>\n                  {/* 주식의 유보율, 영업이익, 돌파 여부를 카드 텍스트로 표시 */}\n                  유보율: {stock.reserveRate}%<br />\n                  영업이익: {stock.operatingProfit}\n                  <br />\n                  돌파 여부: {stock.breakthrough ? 'Yes' : 'No'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default StockList;\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { Button } from 'react-bootstrap';\n\nconst StockModal = ({ stock, isOpen, closeModal }) => {\n  return (\n    <Modal isOpen={isOpen} onRequestClose={closeModal}>\n      <h2>상세 페이지</h2>\n      {stock && (\n        <>\n          <p>코드: {stock.code}</p>\n          <p>이름: {stock.name}</p>\n          <p>유보율: {stock.reserveRate}%</p>\n          <p>영업이익: {stock.operatingProfit}</p>\n          <p>돌파 여부: {stock.breakthrough ? 'Yes' : 'No'}</p>\n        </>\n      )}\n      <Button className=\"btn btn-danger\" onClick={closeModal}>\n        닫기\n      </Button>\n    </Modal>\n  );\n};\n\nexport default StockModal;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Filter from './Filter';\nimport StockList from './StockList';\nimport StockModal from './StockModal';\n\nModal.setAppElement('#root');\n\nconst stockData = [\n  {\n    code: '001',\n    name: 'Stock A',\n    reserveRate: 10,\n    operatingProfit: 500,\n    breakthrough: true,\n  },\n  {\n    code: '002',\n    name: 'Stock B',\n    reserveRate: 20,\n    operatingProfit: 300,\n    breakthrough: false,\n  },\n  {\n    code: '003',\n    name: 'Stock C',\n    reserveRate: 30,\n    operatingProfit: 200,\n    breakthrough: true,\n  },\n  {\n    code: '004',\n    name: 'Stock D',\n    reserveRate: 40,\n    operatingProfit: 100,\n    breakthrough: false,\n  },\n  {\n    code: '005',\n    name: 'Stock E',\n    reserveRate: 50,\n    operatingProfit: 50,\n    breakthrough: true,\n  },\n  {\n    code: '006',\n    name: 'Stock F',\n    reserveRate: 60,\n    operatingProfit: 25,\n    breakthrough: false,\n  },\n  {\n    code: '007',\n    name: 'Stock G',\n    reserveRate: 70,\n    operatingProfit: 15,\n    breakthrough: true,\n  },\n  {\n    code: '008',\n    name: 'Stock H',\n    reserveRate: 80,\n    operatingProfit: 10,\n    breakthrough: false,\n  },\n  {\n    code: '009',\n    name: 'Stock I',\n    reserveRate: 90,\n    operatingProfit: 5,\n    breakthrough: true,\n  },\n  {\n    code: '010',\n    name: 'Stock J',\n    reserveRate: 100,\n    operatingProfit: 1,\n    breakthrough: false,\n  },\n  {\n    code: '011',\n    name: 'Stock K',\n    reserveRate: 15,\n    operatingProfit: 450,\n    breakthrough: true,\n  },\n  {\n    code: '012',\n    name: 'Stock L',\n    reserveRate: 25,\n    operatingProfit: 350,\n    breakthrough: false,\n  },\n  {\n    code: '013',\n    name: 'Stock M',\n    reserveRate: 35,\n    operatingProfit: 250,\n    breakthrough: true,\n  },\n  {\n    code: '014',\n    name: 'Stock N',\n    reserveRate: 45,\n    operatingProfit: 150,\n    breakthrough: false,\n  },\n  {\n    code: '015',\n    name: 'Stock O',\n    reserveRate: 55,\n    operatingProfit: 75,\n    breakthrough: true,\n  },\n  {\n    code: '016',\n    name: 'Stock P',\n    reserveRate: 65,\n    operatingProfit: 35,\n    breakthrough: false,\n  },\n  {\n    code: '017',\n    name: 'Stock Q',\n    reserveRate: 75,\n    operatingProfit: 20,\n    breakthrough: true,\n  },\n  {\n    code: '018',\n    name: 'Stock R',\n    reserveRate: 85,\n    operatingProfit: 8,\n    breakthrough: false,\n  },\n  {\n    code: '019',\n    name: 'Stock S',\n    reserveRate: 95,\n    operatingProfit: 3,\n    breakthrough: true,\n  },\n  {\n    code: '020',\n    name: 'Stock T',\n    reserveRate: 105,\n    operatingProfit: 0,\n    breakthrough: false,\n  },\n];\n\nconst App = () => {\n  const [reserveRateThreshold, setReserveRateThreshold] = useState(0);\n  const [operatingProfitThreshold, setOperatingProfitThreshold] = useState(0);\n  const [breakthrough, setBreakthrough] = useState(false);\n  const [selectedStock, setSelectedStock] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const handleReserveRateChange = (e) => {\n    setReserveRateThreshold(Number(e.target.value));\n  };\n\n  const handleOperatingProfitChange = (e) => {\n    setOperatingProfitThreshold(Number(e.target.value));\n  };\n\n  const handleBreakthroughChange = (e) => {\n    setBreakthrough(e.target.checked);\n  };\n\n  const openModal = (stock) => {\n    setSelectedStock(stock);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setSelectedStock(null);\n  };\n\n  const filteredStocks = stockData.filter(\n    (stock) =>\n      stock.reserveRate > reserveRateThreshold &&\n      stock.operatingProfit > operatingProfitThreshold &&\n      (!breakthrough || stock.breakthrough)\n  );\n\n  return (\n    <div>\n      <div className=\"filter-container\">\n        <Filter\n          reserveRateThreshold={reserveRateThreshold}\n          operatingProfitThreshold={operatingProfitThreshold}\n          breakthrough={breakthrough}\n          handleReserveRateChange={handleReserveRateChange}\n          handleOperatingProfitChange={handleOperatingProfitChange}\n          handleBreakthroughChange={handleBreakthroughChange}\n        />\n      </div>\n      <div className=\"content-container\">\n        <StockList stocks={filteredStocks} openModal={openModal} />\n        <StockModal\n          stock={selectedStock}\n          isOpen={modalIsOpen}\n          closeModal={closeModal}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}